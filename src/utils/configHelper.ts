/**
 * Helper ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Configuration
 */
import { appConfig } from './env'

export interface SystemConfig {
  n8n: {
    webhookUrl: string
    workflowId: string
    instanceUrl: string
  }
  openai: {
    apiKey: string
  }
  line: {
    botToken: string
    userId: string
  }
  gmail: {
    email: string
  }
}

/**
 * ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Configuration ‡∏à‡∏≤‡∏Å n8n ‡πÅ‡∏•‡∏∞ config files
 */
export const systemConfig: SystemConfig = {
  n8n: {
    webhookUrl: appConfig.webhookUrl,
    workflowId: 'uAacnMD8G3VHfTDj',
    instanceUrl: 'https://mossad.app.n8n.cloud'
  },
  openai: {
    apiKey: appConfig.openaiApiKey
  },
  line: {
    botToken: appConfig.lineBotToken,
    userId: appConfig.lineUserId
  },
  gmail: {
    email: appConfig.gmailEmail
  }
}

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
 */
export const testConnections = async () => {
  const results = {
    n8n: false,
    openai: false,
    line: false
  }

  try {
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö n8n Webhook
    console.log('üîÑ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö n8n Webhook...')
    const n8nResponse = await fetch(systemConfig.n8n.webhookUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        test: true,
        post_content: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠'
      })
    })
    results.n8n = n8nResponse.ok
    console.log(`‚úÖ n8n: ${results.n8n ? '‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ' : '‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ'}`)

  } catch (error) {
    console.error('‚ùå n8n Connection Error:', error)
  }

  return results
}

/**
 * ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ n8n ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢
 */
export const sendToN8n = async (postContent: string) => {
  try {
    console.log('üöÄ ‡∏™‡πà‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‡πÑ‡∏õ n8n:', postContent)
    
    const response = await fetch(systemConfig.n8n.webhookUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        post_content: postContent,
        timestamp: new Date().toISOString(),
        source: 'react-app'
      })
    })

    if (response.ok) {
      const result = await response.json()
      console.log('‚úÖ n8n ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö:', result)
      return result
    } else {
      console.error('‚ùå n8n Error:', response.status)
      return null
    }
  } catch (error) {
    console.error('‚ùå Send to n8n Error:', error)
    return null
  }
}
