{
  "type": "object",
  "required": ["name", "serviceType", "containers"],
  "properties": {
    "name": {
      "type": "string",
      "description": "Name of service, the name of workload in cluster"
    },
    "serviceType": {
      "type": "string",
      "enum": [
        "deployment",
        "statefulset",
        "pod",
        "job",
        "cronjob",
        "daemonset"
      ],
      "description": "The Kubernetes Workloads type corresponding to the service"
    },
    "dependLabelSelector": {
      "type": "object",
      "properties": {
        "pods": {
          "type": "array",
          "items": {
            "type": "string",
            "examples": ["name=mariadb"]
          },
          "default": [],
          "description": "Dependent Pods label selector (The service will not start until the Pods selected by selector being ready.)"
        },
        "jobs": {
          "type": "array",
          "items": {
            "type": "string",
            "examples": ["job-name=init-job"]
          },
          "default": [],
          "description": "Dependent Jobs label selector (The service will not start until the Jobs selected by selector completed.)"
        }
      }
    },
    "containers": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["dev"],
        "properties": {
          "name": {
            "type": "string",
            "description": "When the Pod has multiple containers, specify the container name",
            "default": ""
          },
          "install": {
            "type": "object",
            "description": "Specify installation parameters",
            "properties": {
              "env": {
                "type": "array",
                "description": "Inject environment variable for all workload when installed",
                "items": {
                  "type": "object",
                  "required": ["name", "value"],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              "envFrom": {
                "type": "object",
                "required": ["envFile"],
                "properties": {
                  "envFile": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": ["path"],
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "The env file path"
                        }
                      }
                    }
                  }
                },
                "description": "Use envFile to inject environment variable for all workload when installed \n If specify env and envFrom at the same time, then use intersection of them, and use env key as primary"
              },
              "portForward": {
                "type": "array",
                "description": "Ports to be forwarded to local when workload has been installed \n localPort:remotePort",
                "items": {
                  "type": "string"
                },
                "default": [],
                "examples": ["3306:3306"]
              }
            }
          },
          "dev": {
            "type": "object",
            "required": ["gitUrl", "image"],
            "properties": {
              "gitUrl": {
                "type": "string",
                "description": "The git repository clone url of the service",
                "default": null
              },
              "image": {
                "type": "string",
                "description": "DevContainer Image of the micro service",
                "default": null
              },
              "shell": {
                "type": "string",
                "description": "The default shell of DevContainer (Not currently implemented)",
                "default": "/bin/sh"
              },
              "workDir": {
                "type": "string",
                "description": "The work directory of DevContainer",
                "default": "/home/nocalhost-dev"
              },
              "resources": {
                "type": "object",
                "description": "Specify reources requests and limits for DevContainer, same format to Kubernetes's resources (Not currently implemented)",
                "properties": {
                  "limits": {
                    "type": "object",
                    "properties": {
                      "cpu": {
                        "type": "string"
                      },
                      "memory": {
                        "type": "string"
                      }
                    }
                  },
                  "requests": {
                    "type": "object",
                    "properties": {
                      "cpu": {
                        "type": "string"
                      },
                      "memory": {
                        "type": "string"
                      }
                    }
                  }
                },
                "default": {}
              },
              "persistentVolumeDirs": {
                "type": "array",
                "description": "Dirs to be persisted in DevContainer",
                "items": {
                  "type": "object",
                  "required": ["path"],
                  "properties": {
                    "path": {
                      "type": "string",
                      "default": null,
                      "description": "Dir to be persisted in DevContainer"
                    },
                    "capacity": {
                      "type": "string",
                      "description": "Capability of the dir",
                      "default": "10Gi",
                      "examples": ["10Gi"]
                    }
                  }
                }
              },
              "command": {
                "type": "object",
                "properties": {
                  "build": {
                    "type": "array",
                    "description": "Build command of the service",
                    "items": {
                      "type": "string"
                    },
                    "default": [""]
                  },
                  "run": {
                    "type": "array",
                    "description": "Run command of the service",
                    "items": {
                      "type": "string"
                    },
                    "default": [""]
                  },
                  "debug": {
                    "type": "array",
                    "description": "Debug command of the service",
                    "items": {
                      "type": "string"
                    },
                    "default": [""]
                  },
                  "hotReloadRun": {
                    "type": "array",
                    "description": "Hot-reload run command of the service",
                    "items": {
                      "type": "string"
                    },
                    "default": [""]
                  },
                  "hotReloadDebug": {
                    "type": "array",
                    "description": "Hot-reload debug command of the service",
                    "items": {
                      "type": "string"
                    },
                    "default": [""]
                  }
                }
              },
              "debug": {
                "type": "object",
                "description": "Specify debug parameter",
                "properties": {
                  "remoteDebugPort": {
                    "type": "integer",
                    "description": "Specify remote debug port",
                    "default": null
                  }
                }
              },
              "useDevContainer": {
                "type": "boolean",
                "description": "Use .dev-container of VSCode to specify DevContainer Image (Not currently implemented)",
                "default": false
              },
              "sync": {
                "type": "object",
                "description": "Specify file synchronization when enter dev mode",
                "default": {},
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["send", "sendreceive"],
                    "description": "The synchronization file mode of the service (Not currently implemented) \n \"send\" specifies one-way synchronization to the container, \"sendreceive\" specifies two-way synchronization",
                    "default": "send"
                  },
                  "filePattern": {
                    "type": "array",
                    "description": "List of files and directories to be synchronized to DevContainer",
                    "default": ["."],
                    "items": {
                      "type": "string",
                      "examples": ["./src"]
                    }
                  },
                  "ignoreFilePattern": {
                    "type": "array",
                    "description": "List of ignored files and directories to be synchronized to DevContainer",
                    "default": ["."],
                    "items": {
                      "type": "string",
                      "examples": [".git"]
                    }
                  }
                }
              },
              "env": {
                "type": "array",
                "description": "Inject environment variable for all workload when installed",
                "items": {
                  "type": "object",
                  "required": ["name", "value"],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              "envFrom": {
                "type": "object",
                "required": ["envFile"],
                "properties": {
                  "envFile": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": ["path"],
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "The env file path"
                        }
                      }
                    }
                  }
                },
                "description": "Use envFile to inject environment variable for all workload when installed \n If specify env and envFrom at the same time, then use intersection of them, and use env key as primary"
              },
              "portForward": {
                "type": "array",
                "description": "Ports to be forwarded to local when enter devMode \n localPort:remotePort",
                "items": {
                  "type": "string"
                },
                "default": [],
                "examples": ["3306:3306"]
              }
            }
          }
        }
      }
    }
  }
}
